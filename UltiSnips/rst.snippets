snippet pdb "import pdb; pdb.set_trace()" w
import pdb; pdb.set_trace()
endsnippet

snippet traceback "Traceback pattern for doctests" b
Traceback (most recent call last):
  ...
${1:Exception}
endsnippet

global !p
import subprocess
def github_owner_repo(path='', default=''):
    with open(os.devnull, 'w') as devnull:
        pipe = subprocess.Popen(["git", "ls-remote", "--get-url"],
                                stdout=subprocess.PIPE,
                                stderr=devnull,
                                cwd=os.path.dirname(os.path.abspath(path)))
    remote = pipe.communicate()[0].strip()
    if 'github.com' not in remote:
        return default
    path = remote.split('github.com', 1)[-1].lstrip('/:')
    if path.endswith('.git'):
        path = path[:-4]
    return path
endglobal

snippet travis "Travis CI badge" b
.. image:: https://travis-ci.org/${1:owner/repo}.svg?branch=master
    :target: https://travis-ci.org/$1

endsnippet

snippet travis "Travis CI badge" "github_owner_repo(snip.buffer.name)" be
.. image:: https://travis-ci.org/`!p snip.rv = rv = github_owner_repo(path)`.svg?branch=master
    :target: https://travis-ci.org/`!p snip.rv = rv`

endsnippet
